{"remainingRequest":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/About.vue?vue&type=style&index=0&id=039c5b43&lang=scss&scoped=true&","dependencies":[{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/About.vue","mtime":1600322406849},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/css-loader/dist/cjs.js","mtime":1599108269421},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596534517134},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/postcss-loader/src/index.js","mtime":1589102445832},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/sass-loader/dist/cjs.js","mtime":1589102469905},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js","mtime":1589102393205},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js","mtime":1596534517134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQo6OnYtZGVlcCB7DQogIC5pbnB1dC1zZWxlY3Qgew0KICAgIHdpZHRoOiAxMDBweDsNCiAgfQ0KfQ0KLmFib3V0IHsNCiAgaGVpZ2h0OiAxMDB2aDsNCn0NCmZvcm0gew0KICBoZWlnaHQ6IDEwMHZoOw0KfQ0K"},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <!-- \r\n      type=\"flex\"\r\n      :gutter=\"20\"\r\n      :inline=\"false\"\r\n      :row=\"false\"\r\n      :col=\"false\"\r\n      size=\"mini\"\r\n      inline-message\r\n      disabled\r\n      justify=\"end\"\r\n      align=\"center\"\r\n      label-position=\"left\"\r\n      :formData='{}'//回显数据key:value形式\r\n      :formConfigData='{}'//后端返回数据字典 key:value形式\r\n    -->\r\n    <myform\r\n      :formData=\"formData\"\r\n      :formConfigData=\"formConfigData\"\r\n      :cof=\"cof\"\r\n      @getFormData=\"getFormData\"\r\n    >\r\n      <!-- 使用element组件的slot配置时在外加一层template，slot名称为配置此form项时的valueKey -->\r\n      <template slot=\"input\">\r\n        <template slot=\"append\">\r\n          <el-button @click=\"alert\" icon=\"el-icon-search\"></el-button>\r\n        </template>\r\n      </template>\r\n      <template slot=\"input2\">\r\n        <template slot=\"prepend\">\r\n          <el-select class=\"input-select\" v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\r\n            <el-option label=\"餐厅名\" value=\"1\"></el-option>\r\n            <el-option label=\"订单号\" value=\"2\"></el-option>\r\n            <el-option label=\"用户电话\" value=\"3\"></el-option>\r\n          </el-select>\r\n        </template>\r\n      </template>\r\n      <!-- 作用域插槽要用template外的标签包裹，此扩展还未开发完成 -->\r\n    </myform>\r\n    <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\r\n    <el-button @click=\"resetForm\">重置</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nvar formInstance;\r\nimport { configJson as cof } from \"@/views/myform/config.js\";\r\nimport { configJson } from \"@/views/myform/configJson.js\";\r\nimport myform from \"@/views/myform\";\r\n\r\nexport default {\r\n  components: {\r\n    myform,\r\n  },\r\n  data() {\r\n    return {\r\n      select: \"\",\r\n      disabled: true,\r\n      formData: { form1: { input: 12 } }, //用于回显数据\r\n      formConfigData: {\r\n        select1: [\r\n          //无子表单项\r\n          {\r\n            value: \"1\",\r\n            label: \"黄金糕\",\r\n          },\r\n          {\r\n            value: \"2\",\r\n            label: \"双皮奶\",\r\n          },\r\n          {\r\n            value: \"3\",\r\n            label: \"蚵仔煎\",\r\n          },\r\n          {\r\n            value: \"3\",\r\n            label: \"蚵仔煎\",\r\n          },\r\n          {\r\n            value: \"3\",\r\n            label: \"蚵仔煎\",\r\n          },\r\n        ],\r\n        form1: {\r\n          //有子表单项\r\n          select1: [\r\n            {\r\n              value: \"1\",\r\n              label: \"黄金糕\",\r\n            },\r\n            {\r\n              value: \"2\",\r\n              label: \"双皮奶\",\r\n            },\r\n            {\r\n              value: \"3\",\r\n              label: \"蚵仔煎\",\r\n            },\r\n            {\r\n              value: \"3\",\r\n              label: \"蚵仔煎\",\r\n            },\r\n            {\r\n              value: \"3\",\r\n              label: \"蚵仔煎\",\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    /* 演示直接引用改变配置文件 */\r\n    configJson.forEach((i) => {\r\n      if (i.valueKey == \"transfer\") {\r\n        i.props[\"render-content\"] = this.renderFunc;\r\n      }\r\n    });\r\n    /* 演示动态控制禁用 */\r\n    setTimeout(() => {\r\n      this.disabled = false;\r\n    }, 5000);\r\n  },\r\n  mounted() {\r\n    this.getFormInstance(); //获取form实例\r\n  },\r\n  watch: {\r\n    select(V) {\r\n      console.log(V);\r\n    },\r\n  },\r\n  methods: {\r\n    alert() {\r\n      alert(1);\r\n    },\r\n    getFormData(formData) {\r\n      formData;\r\n      console.log(formData);\r\n    },\r\n\r\n    getFormInstance() {\r\n      this.$children.forEach((i) => {\r\n        if (i.$refs.myForm) {\r\n          formInstance = i.$refs.myForm;\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      formInstance.resetFields();\r\n    },\r\n    onSubmit() {\r\n      formInstance.validate((valid) => {\r\n        if (valid) {\r\n          alert(\"submit!\");\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n      // formInstance.validateField(\"input\", (call) => {\r\n      //   console.log(call);\r\n      // });\r\n    },\r\n    renderFunc(h, option) {\r\n      return (\r\n        <span>\r\n          {option.key} - {option.label}\r\n        </span>\r\n      );\r\n    },\r\n    /* 文件上传 */\r\n    handleDownload(file) {\r\n      console.log(file);\r\n    },\r\n    handleRemove(file) {\r\n      console.log(file);\r\n    },\r\n    /* 级联选择动态加载，直接再配置中配置关键字，value为指向此实例的方法 */\r\n    lazyLoad(node, resolve) {\r\n      var id = 0;\r\n      const { level } = node;\r\n      setTimeout(() => {\r\n        const nodes = Array.from({ length: level + 1 }).map(() => ({\r\n          value: ++id,\r\n          label: `选项${id}`,\r\n          leaf: level >= 2,\r\n        }));\r\n        // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n        resolve(nodes);\r\n      }, 1000);\r\n    },\r\n  },\r\n  computed: {\r\n    configJson() {\r\n      return configJson;\r\n    },\r\n    cof() {\r\n      return cof;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep {\r\n  .input-select {\r\n    width: 100px;\r\n  }\r\n}\r\n.about {\r\n  height: 100vh;\r\n}\r\nform {\r\n  height: 100vh;\r\n}\r\n</style>"]}]}