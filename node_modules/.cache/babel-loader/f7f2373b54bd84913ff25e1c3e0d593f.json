{"remainingRequest":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/babel-loader/lib/index.js!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/d3/d3init2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/d3/d3init2.vue","mtime":1600410959934},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js","mtime":1589102393205},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/babel-loader/lib/index.js","mtime":1589102393080},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js","mtime":1589102393205},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js","mtime":1596534517134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCnZhciBkYXRhID0gW3sKICBuYW1lOiAiZGFzIiwKICB2YWx1ZTogMjIKfSwgewogIG5hbWU6ICJldCIsCiAgdmFsdWU6IDEyCn0sIHsKICBuYW1lOiAiZnNmIiwKICB2YWx1ZTogMzMKfSwgewogIG5hbWU6ICJhanIiLAogIHZhbHVlOiA3Cn0sIHsKICBuYW1lOiAicmZ2IiwKICB2YWx1ZTogMTYKfSwgewogIG5hbWU6ICJwb3UiLAogIHZhbHVlOiAxOQp9LCB7CiAgbmFtZTogImFsbyIsCiAgdmFsdWU6IDM4Cn1dOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImQzaW5pdDIiLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgZDMgPSB3aW5kb3cuZDM7CiAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjbXlEMyIpOwogICAgdmFyIG1hcmdpbiA9IHsKICAgICAgdG9wOiAxMDAsCiAgICAgIHJpZ2h0OiAyMDAsCiAgICAgIGJvdHRvbTogMTAwLAogICAgICBsZWZ0OiAyMDAKICAgIH07CiAgICB2YXIgc3ZnV2lkdGggPSArc3ZnLmF0dHIoIndpZHRoIik7CiAgICB2YXIgc3ZnSGVpZ2h0ID0gK3N2Zy5hdHRyKCJoZWlnaHQiKTsKICAgIHZhciBpbm5lcldpZHRoID0gc3ZnV2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDsgLy/lm77ooajovb3kvZPlrr3luqYKCiAgICB2YXIgaW5uZXJIZWlnaHQgPSBzdmdIZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbTsKICAgIC8qIOWumuS5iXggeSDovbTlubbmmKDlsIQgKi8KCiAgICB2YXIgeFNjYWxlID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oW2QzLm1pbihkYXRhLCBmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gZC52YWx1ZTsKICAgIH0pLCBkMy5tYXgoZGF0YSwgZnVuY3Rpb24gKGQpIHsKICAgICAgcmV0dXJuIGQudmFsdWU7CiAgICB9KV0pLnJhbmdlKFswLCBpbm5lcldpZHRoXSk7IC8vZG9tYWluIOaVsOaNruiMg+WbtCByYW5nZSDlg4/ntKDojIPlm7QKCiAgICB2YXIgeVNjYWxlID0gZDMuc2NhbGVCYW5kKCkuZG9tYWluKGRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLm5hbWU7CiAgICB9KSkucmFuZ2UoWzAsIGlubmVySGVpZ2h0XSk7CiAgICAvKiDliJvlu7rlm77ooajmib/ovb3lrrnlmajnlZnlh7rovrnot50gKi8KCiAgICB2YXIgZyA9IHN2Zy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJtYWluZ3JvdXAiKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIuY29uY2F0KG1hcmdpbi5sZWZ0LCAiLCIpLmNvbmNhdChtYXJnaW4udG9wLCAiKSIpKTsKICAgIC8q5Yib5bu65bem6L65eei9tCDlubbmiorlrprkuYnnmoR56L205Lyg5YWlKi8KCiAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCh5U2NhbGUpOwogICAgLyog5Yib5bu65LiA5Liq57uE6KOF6L29eei9tOWRiOeOsCAqLwoKICAgIGcuYXBwZW5kKCJnIikuY2FsbCh5QXhpcyk7CiAgICAvKiDliJvlu7p46L20LOW5tuaKiuWumuS5ieeahHjovbTkvKDlhaUgKi8KCiAgICB2YXIgeEF4aXMgPSBkMy5heGlzQm90dG9tKHhTY2FsZSk7CiAgICBnLmFwcGVuZCgiZyIpLmNhbGwoeEF4aXMpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwiLmNvbmNhdChpbm5lckhlaWdodCwgIikiKSk7CiAgICAvKiDorr7lrprplb/mlrnlvaLmn7HlrZAgKi8KCiAgICBnLnNlbGVjdEFsbCgicmVjdCIpIC8v6KGo56S65omA5pyJcmVjdOiiq+aaguWumumAieS4rQogICAgLmRhdGEoZGF0YSkgLy/nu5HlrprmlbDmja4KICAgIC5lbnRlcigpIC8v6I635Y+W5Yiw5rKh5pyJ57uR5a6a5LiK55qE5pWw5o2uCiAgICAuYXBwZW5kKCJyZWN0IikgLy/mt7vliqDlkozmlbDmja7nm7jlkIzkuKrmlbDnmoTplb/mlrnlvaLlhYPntKAKICAgIC5hdHRyKCJ3aWR0aCIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiB4U2NhbGUoZGF0YS52YWx1ZSk7CiAgICB9KSAvL+e7meavj+S4qnJlY3Tmt7vliqDnur/mgKfmr5TkvovlsLrlrr3luqYKICAgIC5hdHRyKCJoZWlnaHQiLCB5U2NhbGUuYmFuZHdpZHRoKCkgLSAxMCkgLy/nu5nmr4/kuKpyZWN05re75Yqg5Lul5p2h5bim5q+U5L6L5bC65a695bqm55u45b2T55qE6auY5bqmCiAgICAuYXR0cigieSIsIGZ1bmN0aW9uIChkYXRhLCBpKSB7CiAgICAgIHJldHVybiBpICogeVNjYWxlLmJhbmR3aWR0aCgpOwogICAgfSk7IC8v57uZ5q+P5Liq5YWD57Sg6K6+572ueei9tOS9jee9rgogICAgLy8gZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAvLyAgIGcuYXBwZW5kKCJyZWN0IikKICAgIC8vICAgICAuYXR0cigid2lkdGgiLCB4U2NhbGUoaXRlbS52YWx1ZSkpIC8v5oqK5YW35L2T55qE5YC86YCa6L+HeFNjYWxl5pig5bCE5YiweOi9tAogICAgLy8gICAgIC5hdHRyKCJoZWlnaHQiLCB5U2NhbGUuYmFuZHdpZHRoKCkpIC8v6K6+5a6a5a+55bqU5p2h5bim5YC855qE5a695bqmCiAgICAvLyAgICAgLmF0dHIoImZpbGwiLCAiZ3JlZW4iKSAvL+Whq+WFheminOiJsgogICAgLy8gICAgIC5hdHRyKCJ5IiwgeVNjYWxlKGl0ZW0ubmFtZSkpOyAvL+aKiuemu+aVo+eahOWAvOaYoOWwhOWIsHnovbTmnaHluKbkuIoKICAgIC8vIH0pOwogIH0KfTs="},{"version":3,"sources":["d3init2.vue"],"names":[],"mappings":";;;;;;;;;AAOA,IAAA,IAAA,GAAA,CACA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CADA,EAEA;AAAA,EAAA,IAAA,EAAA,IAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAFA,EAGA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAHA,EAIA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAJA,EAKA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CALA,EAMA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CANA,EAOA;AAAA,EAAA,IAAA,EAAA,KAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAPA,CAAA;AASA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,OAFA,qBAEA;AACA,QAAA,EAAA,GAAA,MAAA,CAAA,EAAA;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,MAAA,GAAA;AAAA,MAAA,GAAA,EAAA,GAAA;AAAA,MAAA,KAAA,EAAA,GAAA;AAAA,MAAA,MAAA,EAAA,GAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAAA;AACA,QAAA,QAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA,QAAA,UAAA,GAAA,QAAA,GAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAAA,CANA,CAMA;;AACA,QAAA,WAAA,GAAA,SAAA,GAAA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,MAAA;AACA;;AACA,QAAA,MAAA,GAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CAAA,EAAA,CAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,KAAA;AAAA,KAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,KAAA;AAAA,KAAA,CAAA,CAFA,EAGA,KAHA,CAGA,CAAA,CAAA,EAAA,UAAA,CAHA,CAAA,CATA,CAYA;;AACA,QAAA,MAAA,GAAA,EAAA,CACA,SADA,GAEA,MAFA,CAEA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,aAAA,IAAA,CAAA,IAAA;AAAA,KAAA,CAFA,EAGA,KAHA,CAGA,CAAA,CAAA,EAAA,WAAA,CAHA,CAAA;AAKA;;AACA,QAAA,CAAA,GAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,IAFA,EAEA,WAFA,EAGA,IAHA,CAGA,WAHA,sBAGA,MAAA,CAAA,IAHA,cAGA,MAAA,CAAA,GAHA,OAAA;AAIA;;AACA,QAAA,KAAA,GAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA;AACA;;AACA,IAAA,CAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,KAAA;AACA;;AACA,QAAA,KAAA,GAAA,EAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AACA,IAAA,CAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,KAAA,EAAA,IAAA,CAAA,WAAA,wBAAA,WAAA;AACA;;AACA,IAAA,CAAA,CAAA,SAAA,CAAA,MAAA,EAAA;AAAA,KACA,IADA,CACA,IADA,EACA;AADA,KAEA,KAFA,GAEA;AAFA,KAGA,MAHA,CAGA,MAHA,EAGA;AAHA,KAIA,IAJA,CAIA,OAJA,EAIA,UAAA,IAAA;AAAA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAAA,KAJA,EAIA;AAJA,KAKA,IALA,CAKA,QALA,EAKA,MAAA,CAAA,SAAA,KAAA,EALA,EAKA;AALA,KAMA,IANA,CAMA,GANA,EAMA,UAAA,IAAA,EAAA,CAAA;AAAA,aAAA,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA;AAAA,KANA,EA/BA,CAqCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n  <div class=\"scale\">\n    <svg id=\"myD3\" width=\"1000\" height=\"800\" />\n  </div>\n</template>\n\n<script>\nlet data = [\n  { name: \"das\", value: 22 },\n  { name: \"et\", value: 12 },\n  { name: \"fsf\", value: 33 },\n  { name: \"ajr\", value: 7 },\n  { name: \"rfv\", value: 16 },\n  { name: \"pou\", value: 19 },\n  { name: \"alo\", value: 38 },\n];\nexport default {\n  name: \"d3init2\",\n  mounted() {\n    const d3 = window.d3;\n    const svg = d3.select(\"#myD3\");\n    let margin = { top: 100, right: 200, bottom: 100, left: 200 };\n    let svgWidth = +svg.attr(\"width\");\n    let svgHeight = +svg.attr(\"height\");\n    let innerWidth = svgWidth - margin.left - margin.right; //图表载体宽度\n    let innerHeight = svgHeight - margin.top - margin.bottom;\n    /* 定义x y 轴并映射 */\n    let xScale = d3\n      .scaleLinear()\n      .domain([d3.min(data, (d) => d.value), d3.max(data, (d) => d.value)])\n      .range([0, innerWidth]); //domain 数据范围 range 像素范围\n    let yScale = d3\n      .scaleBand()\n      .domain(data.map((item) => item.name))\n      .range([0, innerHeight]);\n\n    /* 创建图表承载容器留出边距 */\n    let g = svg\n      .append(\"g\")\n      .attr(\"id\", \"maingroup\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    /*创建左边y轴 并把定义的y轴传入*/\n    let yAxis = d3.axisLeft(yScale);\n    /* 创建一个组装载y轴呈现 */\n    g.append(\"g\").call(yAxis);\n    /* 创建x轴,并把定义的x轴传入 */\n    let xAxis = d3.axisBottom(xScale);\n    g.append(\"g\").call(xAxis).attr(\"transform\", `translate(0,${innerHeight})`);\n    /* 设定长方形柱子 */\n    g.selectAll(\"rect\") //表示所有rect被暂定选中\n      .data(data) //绑定数据\n      .enter() //获取到没有绑定上的数据\n      .append(\"rect\") //添加和数据相同个数的长方形元素\n      .attr(\"width\", (data) => xScale(data.value)) //给每个rect添加线性比例尺宽度\n      .attr(\"height\", yScale.bandwidth() - 10) //给每个rect添加以条带比例尺宽度相当的高度\n      .attr(\"y\", (data, i) => i * yScale.bandwidth()); //给每个元素设置y轴位置\n\n    // data.forEach((item) => {\n    //   g.append(\"rect\")\n    //     .attr(\"width\", xScale(item.value)) //把具体的值通过xScale映射到x轴\n    //     .attr(\"height\", yScale.bandwidth()) //设定对应条带值的宽度\n    //     .attr(\"fill\", \"green\") //填充颜色\n    //     .attr(\"y\", yScale(item.name)); //把离散的值映射到y轴条带上\n    // });\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.scale {\n  height: 100%;\n}\n</style>"],"sourceRoot":"src/views/d3"}]}