{"remainingRequest":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/babel-loader/lib/index.js!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/eltree/components/eltree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/src/views/eltree/components/eltree.vue","mtime":1600671599918},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js","mtime":1589102393205},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/babel-loader/lib/index.js","mtime":1589102393080},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/cache-loader/dist/cjs.js","mtime":1589102393205},{"path":"/Users/caishan/Desktop/代码资源/demo/mycode/aboutvue/归档/node_modules/vue-loader/lib/index.js","mtime":1596534517134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IFRyZWUgfSBmcm9tICJlbGVtZW50LXVpIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRyZWU6IFRyZWUKICB9LAogIHByb3BzOiB7CiAgICB0cmVlRGF0YTogewogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHJlcXVpcmU6IHRydWUsCiAgICAgIHR5cGU6IEFycmF5CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxsRGF0YTogW10KICAgIH07CiAgfSwKICB3YXRjaDogey8vIHRyZWVEYXRhOiB7CiAgICAvLyAgIGhhbmRsZXIgKHYpIHsKICAgIC8vICAgICB2Lmxlbmd0aCAhPSAwICYmIHRoaXMudHJhbnNmb3JtVHJlZURhdGEodik7CiAgICAvLyAgIH0sCiAgICAvLyAgIGRlZXA6dHJ1ZQogICAgLy8gfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qIOWFi+mahuaVsOaNriAqLwogICAgY2xvbmVEZWVwVHJlZURhdGE6IGZ1bmN0aW9uIGNsb25lRGVlcFRyZWVEYXRhKGRhdGEpIHsKICAgICAgdmFyIGNsb25lRGVlcGVkdHJlZURhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgcmV0dXJuIGNsb25lRGVlcGVkdHJlZURhdGE7CiAgICB9LAoKICAgIC8qIOWkhOeQhuaVsOaNruagvOW8j+WPmOaIkOWkmue7tOaVsOe7hCAqLwogICAgdHJhbnNmb3JtVHJlZURhdGE6IGZ1bmN0aW9uIHRyYW5zZm9ybVRyZWVEYXRhKGRhdGEpIHsKICAgICAgdmFyIHRyZWVEYXRhID0gdGhpcy5jbG9uZURlZXBUcmVlRGF0YShkYXRhKTsKICAgICAgLyog5pig5bCE5q+P5Liq5YWD57SgaWQgKi8KCiAgICAgIHZhciB0cmVlTWFwID0gdHJlZURhdGEucmVkdWNlKGZ1bmN0aW9uIChwcmUsIGN1cnJlbnQpIHsKICAgICAgICBwcmVbY3VycmVudFsiaWQiXV0gPSBjdXJyZW50OwogICAgICAgIHJldHVybiBwcmU7CiAgICAgIH0sIHt9KTsKICAgICAgdmFyIHJlc3VsdCA9IHRyZWVEYXRhLnJlZHVjZShmdW5jdGlvbiAocHJlLCBjdXJyZW50KSB7CiAgICAgICAgdmFyIHBpZCA9IGN1cnJlbnQucGlkOyAvL+aJgOWxnueItuWFg+e0oOeahGlkCgogICAgICAgIHZhciBwYXJlbnQgPSB0cmVlTWFwW3BpZF07IC8v6I635Y+W54i25YWD57SgCgogICAgICAgIGlmIChwYXJlbnQpIHsKICAgICAgICAgIHBhcmVudC50eXBlID0gInBhcmVudCI7IC8v57uZ54i25YWD57Sg5LiA5Liq57G75Z6L5qCH6K+GCgogICAgICAgICAgcGFyZW50LmNoaWxkcmVuID8gcGFyZW50LmNoaWxkcmVuLnB1c2goY3VycmVudCkgOiBwYXJlbnQuY2hpbGRyZW4gPSBbY3VycmVudF07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGN1cnJlbnQudHlwZSA9ICJwYXJlbnQiOyAvL+e7meeItuWFg+e0oOS4gOS4quexu+Wei+agh+ivhgoKICAgICAgICAgIHByZS5wdXNoKGN1cnJlbnQpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHByZTsKICAgICAgfSwgW10pOwogICAgICB0aGlzLmFsbERhdGEgPSByZXN1bHQ7CiAgICB9LAoKICAgIC8qIOiuvue9ruavj+S4quiKgueCueeahOWbvuaghyAqLwogICAgc2V0Tm9kZUljb246IGZ1bmN0aW9uIHNldE5vZGVJY29uKHR5cGUpIHsKICAgICAgdmFyIGlzT3BlbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7CiAgICAgIHZhciBpc0hhdmVDaGlsZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CiAgICAgIHZhciBoID0gdGhpcy4kY3JlYXRlRWxlbWVudDsKCiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgInBhcmVudCI6CiAgICAgICAgICByZXR1cm4gaXNPcGVuID09IGZhbHNlIHx8IGlzSGF2ZUNoaWxkID09IGZhbHNlID8gaCgibGFiZWwiLCB7CiAgICAgICAgICAgICJjbGFzcyI6ICJlbC1pY29uLWZvbGRlciIKICAgICAgICAgIH0pIDogaCgibGFiZWwiLCB7CiAgICAgICAgICAgICJjbGFzcyI6ICJlbC1pY29uLWZvbGRlci1vcGVuZWQiCiAgICAgICAgICB9KTsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiBoKCJsYWJlbCIsIHsKICAgICAgICAgICAgImNsYXNzIjogImVsLWljb24tZG9jdW1lbnQiCiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKCiAgICAvKiDoh6rlrprkuYnoioLngrnlh73mlbAgKi8KICAgIHJlbmRlckNvbnRlbnQ6IGZ1bmN0aW9uIHJlbmRlckNvbnRlbnQoaCwgX3JlZikgewogICAgICB2YXIgbm9kZSA9IF9yZWYubm9kZSwKICAgICAgICAgIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgICAgICBzdG9yZSA9IF9yZWYuc3RvcmU7CiAgICAgIHZhciBpc0hhdmVDaGlsZCA9IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggPT0gMCB8fCAhbm9kZS5jaGlsZE5vZGVzID8gZmFsc2UgOiB0cnVlOyAvL+WIpOaWreaYr+WQpuacieWtkOiKgueCuQoKICAgICAgZGF0YSwgc3RvcmU7CiAgICAgIHJldHVybiBoKCJkaXYiLCB7CiAgICAgICAgImNsYXNzIjogIm1lbnUtaXRlbSIKICAgICAgfSwgW2goInNwYW4iLCBbdGhpcy5zZXROb2RlSWNvbihkYXRhLnR5cGUsIG5vZGUuZXhwYW5kZWQsIGlzSGF2ZUNoaWxkKV0pLCBkYXRhLm5hbWVdKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMudHJhbnNmb3JtVHJlZURhdGEoX3RoaXMudHJlZURhdGEpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["eltree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <Tree :data=\"allData\" default-expand-all :render-content=\"renderContent\"></Tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Tree } from \"element-ui\";\r\nexport default {\r\n  components: {\r\n    Tree,\r\n  },\r\n  props: {\r\n    treeData: {\r\n      default: () => [],\r\n      require: true,\r\n      type: Array,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      allData: [],\r\n    };\r\n  },\r\n  watch: {\r\n    // treeData: {\r\n    //   handler (v) {\r\n    //     v.length != 0 && this.transformTreeData(v);\r\n    //   },\r\n    //   deep:true\r\n    // },\r\n  },\r\n  methods: {\r\n    /* 克隆数据 */\r\n    cloneDeepTreeData(data) {\r\n      let cloneDeepedtreeData = JSON.parse(JSON.stringify(data));\r\n      return cloneDeepedtreeData;\r\n    },\r\n    /* 处理数据格式变成多维数组 */\r\n    transformTreeData(data) {\r\n      let treeData = this.cloneDeepTreeData(data);\r\n      /* 映射每个元素id */\r\n      let treeMap = treeData.reduce((pre, current) => {\r\n        pre[current[\"id\"]] = current;\r\n        return pre;\r\n      }, {});\r\n      let result = treeData.reduce((pre, current) => {\r\n        let pid = current.pid; //所属父元素的id\r\n        let parent = treeMap[pid]; //获取父元素\r\n        if (parent) {\r\n          parent.type = \"parent\"; //给父元素一个类型标识\r\n          parent.children\r\n            ? parent.children.push(current)\r\n            : (parent.children = [current]);\r\n        } else {\r\n          current.type = \"parent\"; //给父元素一个类型标识\r\n          pre.push(current);\r\n        }\r\n        return pre;\r\n      }, []);\r\n      this.allData = result;\r\n    },\r\n    /* 设置每个节点的图标 */\r\n    setNodeIcon(type, isOpen = false, isHaveChild = false) {\r\n      switch (type) {\r\n        case \"parent\":\r\n          return isOpen == false || isHaveChild == false ? (\r\n            <label class=\"el-icon-folder\"></label>\r\n          ) : (\r\n            <label class=\"el-icon-folder-opened\"></label>\r\n          );\r\n        default:\r\n          return <label class=\"el-icon-document\"></label>;\r\n      }\r\n    },\r\n    /* 自定义节点函数 */\r\n    renderContent(h, { node, data, store }) {\r\n      let isHaveChild =\r\n        node.childNodes.length == 0 || !node.childNodes ? false : true; //判断是否有子节点\r\n      data, store;\r\n      return (\r\n        <div class=\"menu-item\">\r\n          <span>{this.setNodeIcon(data.type, node.expanded, isHaveChild)}</span>\r\n          {data.name}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      this.transformTreeData(this.treeData);\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep {\r\n  .menu-item {\r\n    display: flex;\r\n  }\r\n}\r\n</style>"],"sourceRoot":"src/views/eltree/components"}]}